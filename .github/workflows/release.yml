name: ReleaseTag_ELN_Frontend_Workflow

on:
  push:
    tags:
      - v*.*.*
  workflow_dispatch:

permissions:
  id-token: write # This is required for aws oidc connection
  contents: read # This is required for actions/checkout
  pull-requests: write # This is required for gh bot to comment PR

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.build-image.outputs.imageTag }}
    environment:
      name: ${{ github.ref_name }}

    steps:
      - name: Git-Repo-Checkout
        uses: actions/checkout@v3
        with:
          path: "elnui"

      - name: Get branch names
        id: branch-name
        uses: tj-actions/branch-names@v6

      - name: Configure-AWS-credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GitHub-OIDC-tf

      - name: Login-to-Amazon-ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get a tag name
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          strip_v: false

      - name: Use tag
        run: echo ${{steps.tag.outputs.tag}}

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        working-directory: "elnui"
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
          IMAGE_TAG: ${{steps.tag.outputs.tag}}
        run: |
          echo ${{steps.tag.outputs.tag}}
          echo $ECR_REGISTRY
          #Build a docker container and push it to ECR
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "imageTag=$IMAGE_TAG" >> "$GITHUB_OUTPUT"

  deploy:
    name: "deploy"
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: ${{ github.ref_name }}

    steps:
      - name: Git-Repo-Checkout
        uses: actions/checkout@v3
        with:
          repository: "Feel-DevOps/eln-tf-deployment"
          ref: "stage"
          fetch-depth: 0
          path: terraform
          token: ${{ secrets.PAT_TOKEN }}
          persist-credentials: true

      - name: create new branch
        shell: bash
        working-directory: "terraform"
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git checkout -b ${{ needs.Build.outputs.image_tag }}

      - name: change ImageTag in terraform vars
        shell: bash
        working-directory: "terraform"
        run: |
          cd stage_eln_ecs
          awk 'NR==8 {$0="ui_image_tag = \"${{ needs.build.outputs.image_tag }}\""} { print }' terraform.tfvars > dev-terraform.tfvars; rm terraform.tfvars; mv dev-terraform.tfvars terraform.tfvars
          cd ..

      - name: Add and Commit to branch
        uses: EndBug/add-and-commit@v9
        with:
          add: "."
          author_name: "githubAction"
          message: "upgrade ELN API docker image"
          new_branch: ${{ needs.Build.outputs.image_tag }}
          push: true
          cwd: "terraform"

      - name: Create pull request
        id: pr
        shell: bash
        working-directory: "terraform"
        run: |
          gh pr create --title "pull request for ${{ needs.Build.outputs.image_tag }}" --body "Update image Tag for AWS-ECR eln application" --base "stage" --head "${{ needs.Build.outputs.image_tag }}" -r viren-feeldevops
          gh pr merge --auto --delete-branch --merge "${{ needs.Build.outputs.image_tag }}"
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
